# Ruff configuration file
target-version = "py311"
line-length = 120
indent-width = 4

[lint]
# Enable Pyflakes (F), pycodestyle (E, W), isort (I), and additional rules
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "S",   # flake8-bandit
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
]

ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "S101",  # Use of assert
    "B008",  # Do not perform function calls in argument defaults
    "T201",  # print found
]

# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
    "alembic",
]

[lint.per-file-ignores]
# Ignore specific rules for test files
"tests/**/*.py" = [
    "S105", # Possible hardcoded password
    "S106", # Possible hardcoded password
    "ARG001", # Unused function argument
    "ARG002", # Unused method argument
    "D",    # Ignore all docstring rules in tests
]

# Ignore specific rules for migration files
"migrations/**/*.py" = ["D", "E501", "F401"]
"alembic/**/*.py" = ["D", "E501", "F401"]

# Ignore E501 for email service due to HTML template strings
"app/services/email_service.py" = ["E501"]

[lint.isort]
known-first-party = ["app", "models", "tests"]
force-single-line = false
lines-after-imports = 2
combine-as-imports = true

[lint.pydocstyle]
convention = "google"

[format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"